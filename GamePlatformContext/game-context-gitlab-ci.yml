stages:
  - build
  - unit-test
  - integration-test
  # - upload
  # - deploy

.gameplatform-common:
  rules:
    - changes:
        - 'GamePlatformContext/*'
      if: '$CI_COMMIT_BRANCH && !$CI_MERGE_REQUEST_ID'

variables:
  COMPONENT_VERSION: 0.1.2
  LOCATION: europe-west1
  GITLAB_GAMEPLATFORM_CONTEXT: $CI_REGISTRY_IMAGE/gameplatform-context:$CI_COMMIT_SHORT_SHA
  GITLAB_GAMEPLATFORM_CACHE_CONTEXT: $CI_REGISTRY_IMAGE/gameplatform-context:latest
  AR_IMAGE_TEXT: $GOOGLE_ARTIFACT_REGISTRY_REPOSITORY_LOCATION-docker.pkg.dev/$GOOGLE_ARTIFACT_REGISTRY_PROJECT_ID/$GOOGLE_ARTIFACT_REGISTRY_REPOSITORY_NAME/gameplatform-context:$CI_COMMIT_SHORT_SHA

gameplatform-build:
  image: docker:24.0.5
  stage: build
  extends: .gameplatform-common
  services:
    - docker:24.0.5-dind
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - cd GamePlatformContext
    - docker pull $GITLAB_GAMEPLATFORM_CACHE_CONTEXT || echo "No previous image found. Proceeding with build."
    - docker build -f Dockerfile ../ --build-arg BUILDKIT_INLINE_CACHE=1 --cache-from $GITLAB_GAMEPLATFORM_CACHE_CONTEXT --tag $GITLAB_GAMEPLATFORM_CONTEXT --tag $GITLAB_GAMEPLATFORM_CACHE_CONTEXT
    - docker push $GITLAB_GAMEPLATFORM_CONTEXT
    - docker push $GITLAB_GAMEPLATFORM_CACHE_CONTEXT

unit-test:
  image: docker:24.0.5
  stage: test
  extends: .gameplatform-common
  services:
    - docker:24.0.5-dind
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker pull $GITLAB_GAMEPLATFORM_CONTEXT
    - docker run --rm $GITLAB_GAMEPLATFORM_CONTEXT gradle :GamePlatformContext:test --no-daemon
  artifacts:
    when: always
    reports:
      junit: build/test-results/test/**/TEST-*.xml

integration-test:
  image: docker:24.0.5
  stage: test
  extends: .gameplatform-common
  services:
    - docker:24.0.5-dind
    - postgres:16.1-alpine
  variables:
    POSTGRES_DB: 'demo-integration'
    POSTGRES_USER: 'admin'
    POSTGRES_PASSWORD: 'test'
    CI_DB_HOST_PORT: 'postgres:5432'
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker pull $GITLAB_GAMEPLATFORM_CONTEXT
    - docker run --rm \
      -e POSTGRES_DB=$POSTGRES_DB \
      -e POSTGRES_USER=$POSTGRES_USER \
      -e POSTGRES_PASSWORD=$POSTGRES_PASSWORD \
      -e CI_DB_HOST_PORT=$CI_DB_HOST_PORT \
      $GITLAB_GAMEPLATFORM_CONTEXT gradle :GamePlatformContext:integrationTest --no-daemon
  artifacts:
    when: always
    reports:
      junit: build/test-results/test/**/TEST-*.xml


# text-upload:
#   image: us-docker.pkg.dev/gcb-catalog-release/preview/gar-upload@sha256:468bec8ae7097469ffdc41f702936c4d92edeaa72719f52009367c27b5b6788a
#   stage: upload
#   extends: .text-common
#   identity: google_cloud
#   script:
#     - gar-upload --source $GITLAB_IMAGE_TEXT --target $AR_IMAGE_TEXT --version $COMPONENT_VERSION

# text-deploy:
#   image: google/cloud-sdk:latest
#   stage: deploy
#   extends: .text-common
#   identity: google_cloud
#   script:
#     - gcloud config set project $GCLOUD_PROJECT
#     - gcloud run deploy chatbot-text-generate \
#       --image $AR_IMAGE_TEXT \
#       --region $LOCATION \
#       --port 3000 \
#       --vpc-connector my-vpc-connector \
#       --ingress internal \
#       --allow-unauthenticated
