steps:
  - name: 'gcr.io/cloud-builders/docker'
    entrypoint: 'bash'
    args: [
      '-c',
      'docker pull gcr.io/$PROJECT_ID/$TRIGGER_NAME:latest || exit 0'
    ]

  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'build',
      '-t', 'gcr.io/$PROJECT_ID/$TRIGGER_NAME:$_TAG_NAME',
      '--cache-from', 'gcr.io/$PROJECT_ID/$TRIGGER_NAME:latest',
      '-f', 'GamePlatformContext/Dockerfile',
      '../'
    ]

  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'push',
      '$LOCATION-docker.pkg.dev/$PROJECT_ID/$_REPO_NAME/$_SERVICE_NAME:$_TAG_NAME'
    ]

  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    args: [
      'run',
      'deploy',
      '$_SERVICE_NAME',
      '--image',
      '$LOCATION-docker.pkg.dev/$PROJECT_ID/$_REPO_NAME/$_SERVICE_NAME:$_TAG_NAME',
      '--region',
      '$LOCATION',
      '--port',
      '3000',
      '--vpc-connector',
      'my-vpc-connector',
      '--ingress',
      'internal',
      '--allow-unauthenticated'
    ]

substitutions:
  _REPO_NAME: 'checkers-repo'                
  _SERVICE_NAME: 'gameplatform-service'      
  _TAG_NAME: 'latest'

options:
  automapSubstitutions: true
  logging: CLOUD_LOGGING_ONLY                                 

images: ['gcr.io/$PROJECT_ID/$TRIGGER_NAME:latest']     